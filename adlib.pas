
UNIT ADLIB;


INTERFACE


USES  DOS;


CONST SOUNDINSTALLED : BOOLEAN = FALSE;
      NOTENLAENGE    : INTEGER = 16;


TYPE  OPERATOR = RECORD
        KSL,MULTI,FB,AR,SL,SS,DR,RR,OL,AM,VIB,KSR,FM : INTEGER;
      END;

TYPE  INSTRUMENTTYP = RECORD
        MODE,SZ  : BYTE;
        OP1,OP2  : OPERATOR;
      END;


PROCEDURE SYNTH(FUNC,P1,P2,P3,P4,P5:INTEGER);
FUNCTION  SYNTHBUSY:BOOLEAN;
PROCEDURE NO(N,L:INTEGER);
PROCEDURE PA(L:INTEGER);
FUNCTION  MULTFAKT(NR:INTEGER):REAL;

PROCEDURE SYNTHRESET;
PROCEDURE SYNTHSTART;
PROCEDURE SYNTHSTOP;
PROCEDURE LEEREWARTESCHLANGE;
PROCEDURE SYNTHMODUS(MODE:INTEGER);
PROCEDURE SETTICKS(ANZAHL:INTEGER);
PROCEDURE TEMPO(TEMP:INTEGER);
PROCEDURE STIMME(NR:INTEGER);
PROCEDURE RELSTART(Z,N:INTEGER);
PROCEDURE LAUTSTAERKE(LAUT:INTEGER);
PROCEDURE LAUTVERZOEGERT(LAUT,VN,VZ:INTEGER);
PROCEDURE STIMMUNG(Z,N:INTEGER);
PROCEDURE STIMMUNGVERZOEGERT(Z,N,VZ,VN:INTEGER);
PROCEDURE INSTRUMENT(P:POINTER);
PROCEDURE CHECKDRIVER;


IMPLEMENTATION


TYPE  CHARRAY  = ARRAY[1..19] OF CHAR;
      SOF      = RECORD O,S : WORD; END;

CONST IDSTRING : CHARRAY = 'SOUND-DRIVER-AD-LIB';


VAR   PAR  : ARRAY[1..5] OF INTEGER;
      R    : REGISTERS;
      P    : POINTER;
      P1   : ^CHARRAY ABSOLUTE P;


{ EIN KOMMANDO AN SOUND.COM SENDEN - 
  DIE PARAMETER MöSSEN IM ARRAY PAR[] EINGETRAGEN SEIN
}
PROCEDURE CMD(FUNC:INTEGER);
BEGIN
  WITH R DO BEGIN
    SI := FUNC;
    ES := SEG(PAR);
    BX := OFS(PAR);
    INTR($65,R);
  END; { WITH }
END; { CMD }


{ SYNTHESIZER BUSY ABFRAGEN }
FUNCTION SYNTHBUSY:BOOLEAN;
BEGIN
  WITH R DO BEGIN
    SI := 4;
    ES := SEG(PAR);
    BX := OFS(PAR);
    INTR($65,R);
    SYNTHBUSY := (AL AND 1) <> 0;
  END; { WITH }
END; { SYNTHBUSY }


{ EIN KOMMANDO AN SOUND.COM SENDEN -
  ES MöSSEN FUNKTION UND ALLE 5 MôGLICHEN PARAMETER öBERGEBEN WERDEN
}
PROCEDURE SYNTH(FUNC,P1,P2,P3,P4,P5:INTEGER);
BEGIN
  PAR[1] := P1;
  PAR[2] := P2;
  PAR[3] := P3;
  PAR[4] := P4;
  PAR[5] := P5;
  WITH R DO BEGIN
    SI := FUNC;
    ES := SEG(PAR);
    BX := OFS(PAR);
    INTR($65,R);
  END; { WITH }
END; { SYNTH }


{ GIBT DEN FREQUENZ- MULTIPLIKATIONSFAKTOR ZURöCK }
FUNCTION MULTFAKT(NR:INTEGER):REAL;
BEGIN
  CASE NR OF
           0 : MULTFAKT := 0.5;
    1..10,12 : MULTFAKT := NR;
          11 : MULTFAKT := 10.0;
          13 : MULTFAKT := 12.0;
          14 : MULTFAKT := 15.0;
  ELSE
    MULTFAKT := -1;
  END;
END; { MULTFAKT }


{ -------------------------------------------------------------- }
{
                  HIGLEVEL- PROZEDUREN 

  DIESE PROZEDUREN ERHALTEN NUR SOVIELE PARAMETER, WIE BENôTIGT

  UM DIE ANZAHL PARAMETER FöR NOTE UND PAUSE KLEIN ZU HALTEN, IST EINE
GRUND- NOTENLéNGE IN DER TYPISIERTEN KONSTANTEN NOTENLéNGE ABGELEGT.
WENN NOTENLéNGE 16 IST, SIND DIE KöRZESTEN SPIELBAREN NOTEN 1/16, DIE
NOTENLéNGE FöR NO() UND PA() WIRD IN VIELFACHEN DIESES WERTS ANGEGEBEN.

  DIE TONHôHE IST EIN VORZEICHENBEHAFTETER INTEGER- WERT :
0 IST DAS C, ES SIND PRO OKTAVE 12 TôNE UND HALBTôNE VORHANDEN

}

PROCEDURE SYNTHRESET;
BEGIN
  SYNTH( 0,0,0,0,0,0); { RESET }
END; { SYNTHRESET }


PROCEDURE SYNTHSTART;
BEGIN
  SYNTH( 3,1,0,0,0,0); { START }
END; { SYNTHSTART }


PROCEDURE SYNTHSTOP;
BEGIN
  SYNTH( 3,0,0,0,0,0); { STOP }
END; { SYNTHSTART }


PROCEDURE LEEREWARTESCHLANGE;
BEGIN
  SYNTH( 5,0,0,0,0,0); { WARTESCHLANGE LEEREN }
END; { LEEREWARTESCHLANGE }


PROCEDURE SYNTHMODUS(MODE:INTEGER);
BEGIN
  SYNTH( 6,MODE,0,0,0,0); { MODUS 0 = SCHLAGZEUG, 1 = MELODISCH }
END; { SYNTHMODUS }


PROCEDURE SETTICKS(ANZAHL:INTEGER);
BEGIN
  SYNTH(18,ANZAHL,0,0,0,0); { TICKS / SCHLAG }
END; { SETTICKS }


PROCEDURE TEMPO(TEMP:INTEGER);
BEGIN
  SYNTH( 9,TEMP,0,1,0,0); { Z/N TEMPO, Z/N VERZôGERUNG }
END; { TEMPO }


PROCEDURE STIMME(NR:INTEGER);
BEGIN
  SYNTH(12,NR,0,0,0,0);   { STIMME NR. }
END; { STIMME }


PROCEDURE RELSTART(Z,N:INTEGER);
BEGIN
  SYNTH( 2,Z,N,0,0,0); { Z/N RELATIVER START }
END; { RELSTART }


PROCEDURE LAUTSTAERKE(LAUT:INTEGER);
BEGIN
  SYNTH( 8,LAUT,100,0,0,0);  { Z/N REL. LAUTSTéRKE, Z/N VERZôGERUNG }
END; { LAUTSTAERKE }


PROCEDURE LAUTVERZOEGERT(LAUT,VN,VZ:INTEGER);
BEGIN
  SYNTH( 8,LAUT,100,VN,VZ,0);  { Z/N REL. LAUTSTéRKE, Z/N VERZôGERUNG }
END; { LAUTSTAERKE }


PROCEDURE STIMMUNG(Z,N:INTEGER);
BEGIN
  SYNTH(17,0,Z,N,0,0); { OKTAVE (0), Z/N STIMMUNG, Z/N VERZôGERUNG }
END; { STIMMUNG }


PROCEDURE STIMMUNGVERZOEGERT(Z,N,VZ,VN:INTEGER);
BEGIN
  SYNTH(17,0,Z,N,VZ,VN); { OKTAVE (0), Z/N STIMMUNG, Z/N VERZôGERUNG }
END; { STIMMUNGVERZOEGERT }


PROCEDURE INSTRUMENT(P:POINTER);
BEGIN
  SYNTH(16,SOF(P).O + 2,SOF(P).S,0,1,0);
END; { INSTRUMENT }


{ EINE NOTE MIT NOTENLAENGE LéNGE SPIELEN }
PROCEDURE NO(N,L:INTEGER);
BEGIN
  SYNTH(15,N,L,NOTENLAENGE,0,0);
END; { NO }


{ EINE PAUSE MIT NOTENLAENGE LéNGE }
PROCEDURE PA(L:INTEGER);
BEGIN
  SYNTH(14,0,0,NOTENLAENGE,L,NOTENLAENGE);
END; { PA }


PROCEDURE CHECKDRIVER;
BEGIN
{
  PrÅfen, ob SOUND.COM vorhanden ist
  wenn ja, wird SOUNDINSTALLED True
}
  GETINTVEC($65,P);
{ WENN DER SOUND- INTERRUPT- VEKTOR = NIL IST, IST KEIN TREIBER INSTALLIERT
}
  IF (P <> NIL) THEN BEGIN
{ 16H BYTES VOR DER SERVICE- ROUTINE FöR DEN SOUND- INTERRUPT
  STEHT DER ID- STRING IN SOUND.COM
}
    DEC(SOF(P).O,$16);
    IF P1^ = IDSTRING THEN SOUNDINSTALLED := TRUE;
  END;
END; { CHECKDRIVER }


{
  DIESE PROZEDUR WIRD AUTOMATISCH BEIM PROGRAMMSTART AUSGEFöHRT !
}
BEGIN { MAIN }
  CHECKDRIVER;
END.

